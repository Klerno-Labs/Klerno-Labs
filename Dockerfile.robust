# Use official Python image as base
FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements first for better caching
COPY requirements.txt .

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY . .

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    APP_ENV=prod \
    PORT=8000

# Expose the port the app runs on
EXPOSE 8000

# Create a script to decide what to run based on health
RUN echo '#!/bin/bash\n\
echo "Trying to start main app..."\n\
if python -m uvicorn app.main:app --host 0.0.0.0 --port $PORT; then\n\
    echo "Main app started successfully"\n\
else\n\
    echo "Main app failed to start, falling back to healthcheck..."\n\
    python -m uvicorn healthcheck:app --host 0.0.0.0 --port $PORT\n\
fi' > /app/entrypoint.sh && chmod +x /app/entrypoint.sh

# Run the fallback script as container entrypoint
CMD ["/app/entrypoint.sh"]