# ==============================================================================
# Klerno Labs - Kubernetes Ingress Configuration
# ==============================================================================
# Load balancing and SSL termination for horizontal scaling

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: klerno-ingress
  namespace: klerno-labs
  annotations:
    # AWS ALB annotations
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:region:account:certificate/cert-id
    
    # NGINX Ingress annotations (alternative)
    # nginx.ingress.kubernetes.io/rewrite-target: /
    # nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/rate-limit-requests-per-second: "10"
    
    # Security headers
    nginx.ingress.kubernetes.io/server-snippet: |
      add_header X-Frame-Options DENY;
      add_header X-Content-Type-Options nosniff;
      add_header X-XSS-Protection "1; mode=block";
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin";
      add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self'";
    
    # Load balancing
    nginx.ingress.kubernetes.io/upstream-hash-by: "$remote_addr"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30"
spec:
  tls:
  - hosts:
    - klerno.com
    - api.klerno.com
    secretName: klerno-tls-secret
  rules:
  - host: klerno.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: klerno-app-service
            port:
              number: 80
  - host: api.klerno.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: klerno-app-service
            port:
              number: 80
---
# ==============================================================================
# Network Policy for Security
# ==============================================================================
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: klerno-network-policy
  namespace: klerno-labs
spec:
  podSelector:
    matchLabels:
      app: klerno-app
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: TCP
      port: 8000
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: postgres
    ports:
    - protocol: TCP
      port: 5432
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80
---
# ==============================================================================
# Pod Disruption Budget
# ==============================================================================
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: klerno-app-pdb
  namespace: klerno-labs
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: klerno-app
---
# ==============================================================================
# Vertical Pod Autoscaler (VPA)
# ==============================================================================
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: klerno-app-vpa
  namespace: klerno-labs
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: klerno-app
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: klerno-app
      minAllowed:
        cpu: 100m
        memory: 128Mi
      maxAllowed:
        cpu: 1000m
        memory: 2Gi
      mode: Auto