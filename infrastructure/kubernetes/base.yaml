# ==============================================================================
# Klerno Labs - Kubernetes Namespace
# ==============================================================================
apiVersion: v1
kind: Namespace
metadata:
  name: klerno-labs
  labels:
    name: klerno-labs
    app.kubernetes.io/name: klerno-labs
    app.kubernetes.io/part-of: klerno-platform
---
# ==============================================================================
# PostgreSQL Database
# ==============================================================================
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: klerno-labs
type: Opaque
data:
  postgres-user: a2xlcm5v  # base64: klerno
  postgres-password: a2xlcm5vX3Bhc3N3b3Jk  # base64: klerno_password
  postgres-db: a2xlcm5vX2Ri  # base64: klerno_db
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: klerno-labs
spec:
  selector:
    app: postgres
  ports:
    - port: 5432
      targetPort: 5432
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: klerno-labs
spec:
  serviceName: postgres-service
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        env:
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: postgres-db
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: postgres-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: postgres-password
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - klerno
            - -d
            - klerno_db
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - klerno
            - -d
            - klerno_db
          initialDelaySeconds: 5
          periodSeconds: 5
  volumeClaimTemplates:
  - metadata:
      name: postgres-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi
---
# ==============================================================================
# Redis Cache
# ==============================================================================
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: klerno-labs
spec:
  selector:
    app: redis
  ports:
    - port: 6379
      targetPort: 6379
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: klerno-labs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "250m"
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
---
# ==============================================================================
# Application Deployment
# ==============================================================================
apiVersion: v1
kind: Secret
metadata:
  name: app-secret
  namespace: klerno-labs
type: Opaque
data:
  secret-key: ZGV2LXNlY3JldC1rZXktMzItY2hhcmFjdGVycy1sb25n  # base64
  api-key: ZGV2LWFwaS1rZXk=  # base64
  openai-api-key: ""  # base64 encoded OpenAI key
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: klerno-labs
data:
  APP_ENV: "production"
  RISK_THRESHOLD: "0.75"
  XRPL_RPC_URL: "wss://xrplcluster.com/"
  DATABASE_URL: "postgresql://klerno:klerno_password@postgres-service:5432/klerno_db"
  REDIS_URL: "redis://redis-service:6379/0"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: klerno-app
  namespace: klerno-labs
  labels:
    app: klerno-app
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: klerno-app
  template:
    metadata:
      labels:
        app: klerno-app
    spec:
      containers:
      - name: klerno-app
        image: klerno-labs:latest
        ports:
        - containerPort: 8000
        env:
        - name: PORT
          value: "8000"
        - name: WORKERS
          value: "2"
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secret
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /healthz
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 10
---
# ==============================================================================
# Application Service
# ==============================================================================
apiVersion: v1
kind: Service
metadata:
  name: klerno-app-service
  namespace: klerno-labs
spec:
  selector:
    app: klerno-app
  ports:
    - name: http
      port: 80
      targetPort: 8000
      protocol: TCP
  type: ClusterIP
---
# ==============================================================================
# Horizontal Pod Autoscaler
# ==============================================================================
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: klerno-app-hpa
  namespace: klerno-labs
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: klerno-app
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 4
        periodSeconds: 15
      selectPolicy: Max