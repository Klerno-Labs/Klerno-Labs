name: CI

on:
  push: {}
  pull_request: {}

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run mypy (type checks)
        run: python -m mypy --show-error-codes --pretty --check-untyped-defs app

      - name: Run tests
        run: python -m pytest -q
name: CI (legacy - superseded by core-ci.yml; retained temporarily)

on:
  push:
    branches: [ main, master, cleanup/tests-ci ]
  pull_request:
    branches: [ main, master, cleanup/tests-ci ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install runtime deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f dev-requirements.txt ]; then pip install -r dev-requirements.txt; fi

      - name: Install dev tools
        run: |
          python -m pip install --upgrade ruff mypy flake8 pytest pytest-asyncio

      - name: Run ruff (lint)
        run: |
          ruff check . || true

      - name: Run mypy (type checks)
        run: |
          mypy --ignore-missing-imports app tests || true

      - name: Run flake8 (style)
        run: |
          python -m flake8 --max-line-length=120 || true

      - name: Run tests
        run: pytest -q
      # End legacy workflow
