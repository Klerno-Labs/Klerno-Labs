name: CI

on:
  push:
    branches: ["main", "master", "cleanup/tests-ci"]
  pull_request:
    branches: ["main", "master"]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install runtime deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f dev-requirements.txt ]; then pip install -r dev-requirements.txt; fi

      - name: Install dev tools
        run: |
          python -m pip install pytest mypy flake8

      - name: Run import-safety check
        run: python scripts/check_top_level_imports.py

      - name: Run flake8 (lint)
        run: python -m flake8 --max-line-length=120 app

      - name: Run mypy (type checks)
        run: python -m mypy app --config-file mypy.ini

      - name: Run tests
        run: python -m pytest -q
name: CI

on:
  push:
    branches: ["main", "master", "cleanup/tests-ci"]
  pull_request:
    branches: ["main", "master"]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          name: CI

              - name: Checkout
                uses: actions/checkout@v4
            push:
              branches: ["main", "master", "cleanup/tests-ci"]
            pull_request:
              branches: ["main", "master"]

          jobs:
            test:
              runs-on: ubuntu-latest
              strategy:
                matrix:
                  python-version: [3.11]

              steps:
                - name: Checkout
                  uses: actions/checkout@v4

                - name: Set up Python
                  uses: actions/setup-python@v4
                  with:
                    python-version: ${{ matrix.python-version }}

                - name: Cache pip
                  uses: actions/cache@v4
                  with:
                    path: ~/.cache/pip
                    key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
                    restore-keys: |
                      ${{ runner.os }}-pip-

                - name: Install runtime deps
                  run: |
                    python -m pip install --upgrade pip
                    if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
                    if [ -f dev-requirements.txt ]; then pip install -r dev-requirements.txt; fi

                - name: Install dev tools
                  run: |
                    python -m pip install pytest mypy flake8

                - name: Run import-safety check
                  run: python scripts/check_top_level_imports.py

                - name: Run flake8 (lint)
                  run: python -m flake8 --max-line-length=120 app

                - name: Run mypy (type checks)
                  run: python -m mypy app --config-file mypy.ini

                - name: Run tests
                  run: python -m pytest -q
