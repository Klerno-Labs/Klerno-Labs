name: Auto-open PR for ci branches

on:
  push:
    branches:
      - "ci/**"
  workflow_dispatch:
  pull_request_target:
    branches:
      - main

permissions:
    contents: read
    pull-requests: write

jobs:
    open-pr:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Create or find PR from this branch
              uses: actions/github-script@v7
              with:
                  script: |
                      const fs = require('fs');
                      const path = 'PR_BODY_CI_TYPECLEANUP.md';
                      let body = '';
                      try {
                        body = fs.readFileSync(path, 'utf8');
                      } catch (e) {
                        core.warning(`PR body file not found at ${path}; proceeding with a minimal body.`);
                        body = 'Automated PR created by workflow.';
                      }

                      const headRef = context.ref.replace('refs/heads/', '');
                      const base = 'main';
                      const title = 'ci: mypy cleanup, ruff fixes, Bandit artifact';

                      // Check if an open PR already exists from this branch to base
                      const { data: prs } = await github.rest.pulls.list({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        state: 'open',
                        head: `${context.repo.owner}:${headRef}`,
                        base,
                        per_page: 100,
                      });

                      if (prs.length > 0) {
                        core.info(`Found existing PR: ${prs[0].html_url}`);
                        core.setOutput('pr_url', prs[0].html_url);
                        return;
                      }

                      // Create a new PR
                      const { data: pr } = await github.rest.pulls.create({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        title,
                        head: headRef,
                        base,
                        body,
                        maintainer_can_modify: true,
                      });

                      core.info(`Created PR: ${pr.html_url}`);
                      core.setOutput('pr_url', pr.html_url);
