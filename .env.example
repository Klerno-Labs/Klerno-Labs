# ==============================================================================
# Klerno Labs - Secure Environment Configuration
# ==============================================================================
# Copy this file to .env and fill in your actual values.
# Never commit .env files with real secrets to version control.

# ==============================================================================
# Application Configuration
# ==============================================================================
APP_ENV=development           # Options: development, production
DEMO_MODE=true                # Enable demo mode (for development only)
DEBUG=true                    # Enable debug mode
SECRET_KEY=dev-secret-key-32-characters-long
API_KEY=dev-api-key
PORT=8000
WORKERS=2

# ==============================================================================
# Security Configuration
# ==============================================================================
# Generate a strong, random 32+ character secret key for production
# Example: python -c "import secrets; print(secrets.token_urlsafe(32))"
JWT_SECRET=dev-jwt-secret-32-characters-long
RISK_THRESHOLD=0.75          # Risk assessment threshold (0.0 to 1.0)

# API Key for external integrations (auto-generate if not set)
# Generate with: python -c "import secrets; print('sk-' + secrets.token_urlsafe(32))"
X_API_KEY=

# Session security
SESSION_COOKIE_NAME=session
COOKIE_SECURE=auto            # Options: auto, true, false
COOKIE_SAMESITE=lax           # Options: lax, strict, none

# TLS/HTTPS enforcement
ENABLE_HSTS=true              # Enforce HTTP Strict Transport Security
FORCE_HTTPS=true              # Redirect all traffic to HTTPS

# ==============================================================================
# Database Configuration
# ==============================================================================
# For production, use PostgreSQL with SSL
DATABASE_URL=postgresql://username:password@localhost:5432/klerno_db?sslmode=require

# For development, SQLite is acceptable
# DATABASE_URL=sqlite:///./data/klerno.db

# ==============================================================================
# Redis Configuration
# ==============================================================================
REDIS_URL=redis://localhost:6379/0

# ==============================================================================
# Authentication & Authorization
# ==============================================================================
ADMIN_EMAIL=admin@yourdomain.com
ACCESS_TOKEN_EXPIRE_MINUTES=60

# Password requirements (future implementation)
MIN_PASSWORD_LENGTH=12
REQUIRE_PASSWORD_COMPLEXITY=true
MAX_LOGIN_ATTEMPTS=5
LOCKOUT_DURATION_MINUTES=15

# ==============================================================================
# External Service Integration
# ==============================================================================
# OpenAI for AI-powered analysis (optional)
OPENAI_API_KEY=
OPENAI_MODEL=gpt-4o-mini

# Email notifications (SendGrid)
SENDGRID_API_KEY=
ALERT_EMAIL_FROM=alerts@yourdomain.com
ALERT_EMAIL_TO=security@yourdomain.com

# Payment processing (Stripe)
STRIPE_SECRET_KEY=
STRIPE_PRICE_ID=
STRIPE_WEBHOOK_SECRET=

# XRPL blockchain integration
XRPL_RPC_URL=wss://xrplcluster.com/

# ==============================================================================
# Monitoring & Observability
# ==============================================================================
PROMETHEUS_METRICS_ENABLED=true
HEALTH_CHECK_INTERVAL=30      # Health check interval in seconds
SENTRY_DSN=

# ==============================================================================
# Security & Monitoring
# ==============================================================================
ENABLE_RATE_LIMITING=true
AUDIT_LOG_LEVEL=INFO
AUDIT_LOG_RETENTION_DAYS=365
ENABLE_SECURITY_HEADERS=true
ENABLE_CSRF_PROTECTION=true
LOG_FAILED_AUTH_ATTEMPTS=true

# Content Security Policy customization
CSP_SCRIPT_SRC='self' 'unsafe-inline' https://cdn.jsdelivr.net https://js.stripe.com
CSP_STYLE_SRC='self' 'unsafe-inline' https://cdn.jsdelivr.net
CSP_IMG_SRC='self' data: https:
CSP_CONNECT_SRC='self' ws: wss: https://api.stripe.com

# Feature Policy / Permissions Policy
PERMISSIONS_POLICY=camera=(), microphone=(), geolocation=(), payment=()

# ==============================================================================
# Development & Testing
# ==============================================================================
DEV_SKIP_AUTH=false
DEV_MOCK_PAYMENTS=false
TEST_DATABASE_URL=sqlite:///./test.db

# ==============================================================================
# Security Best Practices Notes
# ==============================================================================
# 1. Use strong, unique passwords and API keys
# 2. Enable TLS/HTTPS in production (FORCE_HTTPS=true)
# 3. Use environment-specific configurations
# 4. Regularly rotate API keys and secrets
# 5. Enable all security features in production
# 6. Monitor audit logs for suspicious activity
# 7. Keep dependencies updated
# 8. Use database SSL connections in production
# 9. Configure proper CORS policies
# 10. Set up proper firewall rules