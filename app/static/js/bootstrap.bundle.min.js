/*!
 * Bootstrap v5.3.3 (https://getbootstrap.com/)
 * Copyright 2011-2024 The Bootstrap Authors and Twitter, Inc.
 * PLACEHOLDER LOCAL FALLBACK - Replace with actual Bootstrap JS bundle
 */

(function() {
  'use strict';

  // Minimal Bootstrap JavaScript functionality for local fallback
  // In production, this should be the actual Bootstrap 5.3.3 JS bundle

  // Collapse functionality
  function initCollapse() {
    document.addEventListener('click', function(e) {
      const trigger = e.target.closest('[data-bs-toggle="collapse"]');
      if (!trigger) return;
      
      e.preventDefault();
      const targetSelector = trigger.getAttribute('data-bs-target');
      const target = document.querySelector(targetSelector);
      
      if (!target) return;
      
      const isExpanded = trigger.getAttribute('aria-expanded') === 'true';
      
      if (isExpanded) {
        target.classList.remove('show');
        trigger.setAttribute('aria-expanded', 'false');
      } else {
        target.classList.add('show');
        trigger.setAttribute('aria-expanded', 'true');
      }
    });
  }

  // Toast functionality
  window.bootstrap = window.bootstrap || {};
  window.bootstrap.Toast = function(element, options) {
    this.element = element;
    this.options = options || {};
    
    this.show = function() {
      this.element.style.display = 'block';
      this.element.classList.add('show');
      
      const delay = this.options.delay || 5000;
      if (delay > 0) {
        setTimeout(() => {
          this.hide();
        }, delay);
      }
    };
    
    this.hide = function() {
      this.element.classList.remove('show');
      setTimeout(() => {
        this.element.style.display = 'none';
        const event = new CustomEvent('hidden.bs.toast');
        this.element.dispatchEvent(event);
      }, 150);
    };
    
    // Auto-hide functionality
    const closeButton = this.element.querySelector('[data-bs-dismiss="toast"]');
    if (closeButton) {
      closeButton.addEventListener('click', () => {
        this.hide();
      });
    }
    
    return this;
  };

  // Tab functionality (basic)
  function initTabs() {
    document.addEventListener('click', function(e) {
      const tab = e.target.closest('[role="tab"]');
      if (!tab) return;
      
      e.preventDefault();
      
      // Remove active states from all tabs
      const tabContainer = tab.closest('[role="tablist"]');
      if (tabContainer) {
        const allTabs = tabContainer.querySelectorAll('[role="tab"]');
        allTabs.forEach(t => {
          t.setAttribute('aria-selected', 'false');
          t.tabIndex = -1;
        });
        
        // Hide all panels
        const panels = document.querySelectorAll('[role="tabpanel"]');
        panels.forEach(panel => {
          panel.hidden = true;
        });
      }
      
      // Activate clicked tab
      tab.setAttribute('aria-selected', 'true');
      tab.tabIndex = 0;
      
      // Show associated panel
      const targetId = tab.getAttribute('aria-controls');
      if (targetId) {
        const panel = document.getElementById(targetId);
        if (panel) {
          panel.hidden = false;
        }
      }
    });
  }

  // Form validation (basic)
  function initValidation() {
    const forms = document.querySelectorAll('.needs-validation');
    forms.forEach(form => {
      form.addEventListener('submit', function(e) {
        if (!form.checkValidity()) {
          e.preventDefault();
          e.stopPropagation();
        }
        form.classList.add('was-validated');
      });
    });
  }

  // Modal functionality (basic)
  window.bootstrap.Modal = function(element, options) {
    this.element = element;
    this.options = options || {};
    
    this.show = function() {
      this.element.style.display = 'block';
      this.element.classList.add('show');
      document.body.classList.add('modal-open');
    };
    
    this.hide = function() {
      this.element.classList.remove('show');
      setTimeout(() => {
        this.element.style.display = 'none';
        document.body.classList.remove('modal-open');
      }, 150);
    };
    
    return this;
  };

  // Initialize components when DOM is ready
  function init() {
    initCollapse();
    initTabs();
    initValidation();
  }

  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', init);
  } else {
    init();
  }

  // Export for global access
  window.bootstrap = window.bootstrap || {};
  
})();